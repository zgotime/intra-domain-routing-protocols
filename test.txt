Firstly, for each simulation step, when our routing table, LStable or DVtable changed, we will print out all the table entris to check out what happened and whether it is consistent with our designed algorithm. In addition, we have modified the Event class (only for test) to print out all traffic and their contains flowing in the simulator, which helps us to track all packets generated by our algorithm and help us to diagnose whether a single packet contains the correct information and reach the proper destination.

Then, we focus on comparing our results with the results provided by the simpletest[1,2,3] to exam whether the routing logic of our algorithm is consistent with the samples.

In the third stage, we write simpletest4 and simpletest5 according to the situations in intrerdoamin_routing.ppt to test the correctness of our LS protocol and the effectiveness of poison reverse. We also write a bash script simpletest.sh to generate simpletest files which may contain more than 100 nodes to test the robustness of our program to find out possible memory or performance problems. 
